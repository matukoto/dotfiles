" 文字コードの自動判別
set encoding=utf-8
set fileencodings=utf-8
"
" 改行コードの自動認識
set fileformats=unix,dos

" 新しいウィンドウを下､右に開く
set splitbelow
set splitright

"  カーソルの位置を%で表示
set ruler

" カーソル行の背景色変更
set cursorline

" タブ
set tabstop=2
set shiftwidth=2
set softtabstop=2

" インデントにスペースを使用
set expandtab

" 改行時に自動インデント
set autoindent
set smartindent

" Vim のビジュアルモードでは p を使うと、無名レジスタに選択したテキストがコピーされる
xnoremap p P
xnoremap P p

" vim diff
"- [vimdiffでより賢いアルゴリズム (patience, histogram) を使う #Git - Qiita](https://qiita.com/takaakikasai/items/3d4f8a4867364a46dfa3)
set diffopt=internal,filler,algorithm:histogram,indent-heuristic

" 折返したときもインデント
set breakindent

" 折り返したときにインデントの深さを同じに
set breakindentopt=shift:0

" 全角文字専用の設定
" アプリと端末ソフトとフォントの扱っている幅が全部一致していないとずれるのでコメントアウト
" set ambiwidth=double

" 対応する括弧やブレースを表示
set showmatch matchtime=1

"検索をファイルの先頭へ循環しない
set nowrapscan

" ヘルプを日本語優先に
set helplang=ja,en

" ターミナルモード
" esc
tnoremap <ESC> <C-\><C-n>
" " インサートモードで入る
" if has('nvim')
" 	autocmd WinEnter * if &buftype ==# 'terminal' | startinsert | endif
" else
" 	autocmd WinEnter * if &buftype ==# 'terminal' | normal i | endif
" endif

" nnoremap <silent> <C-t><C-m> :split<CR> <C-w>j :terminal<CR> :resize 6<CR> i
"行番号を表示
set number
"大文字小文字の区別なし
set ignorecase
 
" swap しない
set noswapfile

"検索時に大文字を含んでいたら大/小を区別
set smartcase
 
"検索対象をハイライト
"ハイライトを消す場合は:noh[l]
set hlsearch
" Escの2回押しでハイライト消去
nnoremap <Esc><Esc> :nohlsearch<CR><ESC>
"スクロール時に表示を10行確保
set scrolloff=10
 
"x キー削除でデフォルトレジスタに入れない
nnoremap x "_x
vnoremap x "_x
 
"vv で行末まで選択
vnoremap v ^$h
 
" インデントを手軽に変更
nnoremap > >>
nnoremap < <<

" ; と : の入れ替え
nnoremap ; :
nnoremap : ;
vnoremap ; :
vnoremap : ;

" 相対的な行番号を表示
" set relativenumber

" j, k による移動を折り返されたテキストでも自然に振る舞うように変更
nnoremap j gj
nnoremap k gk
nnoremap J gJ

" 動作環境との統合
" OSのクリップボードをレジスタ指定無しで Yank, Put 出来るようにする
set clipboard=unnamedplus
" マウスの入力を受け付ける
set mouse=a

" 置換を簡単に monaqaさん
" https://zenn.dev/vim_jp/articles/2023-06-30-vim-substitute-tips
cnoreabbrev <expr> s getcmdtype() .. getcmdline() ==# ':s' ? [getchar(), ''][1] .. "%s///g<Left><Left>" : 's'
" visual mode の範囲選択をした状態でも同じことをしたい
" cnoreabbrev <expr> s getcmdtype() .. getcmdline() ==# ':\'\<\,\'\>s' ? [getchar(), ''][1] .. "%s///g<Left><Left>" : 's'

" 大文字小文字を区別して検索(デフォルトは区別しない)
" https://zenn.dev/igrep/articles/2023-08-vim-backslash-c
nnoremap <Space>/ /\C
nnoremap <Space>? ?\C

" git message
augroup select-commit-title
  autocmd!
  autocmd FileType *commit nnoremap <buffer> <CR><CR>
        \  <Cmd>silent! execute 'normal! ^w"zdiw"_dip"zPA: ' <bar> startinsert!<CR>
augroup END
